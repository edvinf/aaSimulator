% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulator.R
\name{optimizeUnits}
\alias{optimizeUnits}
\title{Optimize units}
\usage{
optimizeUnits(
  cost,
  iterations = c(10, 100, 2000),
  replications = c(20, 3, 3),
  rank = c("overlap", 10, "all"),
  attacker = NULL,
  defender = NULL,
  units = c(),
  unittable = aaSimulator::lhtr2_units,
  verbose = T
)
}
\arguments{
\item{cost}{The cost to optimize for, unit configurations must not exceed this cost}

\item{iterations}{the number of iterations to run for each unit configuration.}

\item{replications}{the number of replicates to run for each unit configuration}

\item{rank}{number of keyword for determining which results to return. See details.}

\item{attacker}{ool for attacker, NULL if attacking units are to be optimized}

\item{defender}{ool for defender, NULL if defending units are to be optimized}

\item{units}{the units in order of loss that should be sampled for optimization, formatted as \code{\link[aaSimulator]{ool}}. See details.}

\item{unittable}{table of unit properties, formatted as \code{\link[aaSimulator]{unitTable}}}

\item{verbose}{logical() whether to write progress information to stdout}
}
\value{
list with entries formatted as formatted as \code{\link[aaSimulator]{simulationStats}}, containing stats for the optimal unit configurations. See details.
}
\description{
Optimize unit configuration for fixed costs.
}
\details{
Runs simulation of for each possible unit configuration, repsecting the order of parameter 'units',
 and identifies optimal configurations.

 The optimal configurations returned are controlled by the parameter 'rank'. If 'rank' is an integer n,
 n first results will be returned, ordered by average win percentage.
 'rank' may also be a keyword which will have the following effects:
 \describe{
  \item{'overlap'}{The highest ranking result will be returned, toghether with all results where some replicate peforms at least as good as the optimum average.}
  \item{'all}{All results will be returned}
  }

 'units' denote order of unit groups, so that units=c("inf", "arm"), will try all combinations
 of "inf" and "arm" allowed by the parameter 'cost', but always with all "inf" preceeding all "arm".

 if 'iterations', 'replications' and 'rank' are vector of equal length, they specify a n iterative optimization,
 where the optimal unit configurations from the first round (optimization with interations[1], replications[1], and rank[1])
 are used as the only available unit configurations for subsequent runs.
}
\examples{
 optimizeUnits(30, defender = "8 inf", units=c("inf", "art", "arm"), verbose=T)
}
